# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtCore import QUrl
import urllib.parse
with open('settings.txt', 'r', encoding='utf-8') as file:
    appConfig = file.readlines()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(930, 591)
        MainWindow.setMinimumSize(QtCore.QSize(700, 500))
        MainWindow.setStyleSheet("\n"
"QLineEdit {\n"
"  border-radius: 8px;\n"
"  border: 1px solid #e0e4e7;\n"
"  padding: 5px 15px;\n"
"    background-color: rgb(154, 153, 150);\n"
"}\n"
"\n"
"QMainWindow{\n"
"    background-color: rgb(5, 19, 26);\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"  border: 1px solid #d0e3ff;\n"
"}\n"
"QLineEdit::placeholder {\n"
"  color: #767e89;\n"
"}"
"QPushButton {\n"
"    color: rgb(255, 255, 255);\n"
"}"
"QLabel {\n"
"    color: rgb(255, 255, 255);\n"
"}")
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.topBar = QtWidgets.QFrame(self.centralwidget)
        self.topBar.setMaximumSize(QtCore.QSize(16777215, 50))
        self.topBar.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.topBar.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.topBar.setObjectName("topBar")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.topBar)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.backBtn = QtWidgets.QPushButton(self.topBar)
        self.backBtn.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/backwardIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.backBtn.setIcon(icon)
        self.backBtn.setIconSize(QtCore.QSize(20, 20))
        self.backBtn.setFlat(True)
        self.backBtn.setObjectName("backBtn")
        self.horizontalLayout.addWidget(self.backBtn)
        
#RELOAD BUTTON CODE
        self.reloadBtn = QtWidgets.QPushButton(self.topBar)
        self.reloadBtn.setText("")
        self.icon1 = QtGui.QIcon()
        self.icon1.addPixmap(QtGui.QPixmap("icons/reloadIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reloadBtn.setIcon(self.icon1)
        self.reloadBtn.setIconSize(QtCore.QSize(22, 22))
        self.reloadBtn.setFlat(True)
        self.reloadBtn.setObjectName("reloadBtn")
        self.horizontalLayout.addWidget(self.reloadBtn)
        
        
#FORWARD BUTTON CODE
        self.forwardBtn = QtWidgets.QPushButton(self.topBar)
        self.forwardBtn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/forwardIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.forwardBtn.setIcon(icon2)
        self.forwardBtn.setIconSize(QtCore.QSize(20, 20))
        self.forwardBtn.setFlat(True)
        self.forwardBtn.setObjectName("forwardBtn")
        self.horizontalLayout.addWidget(self.forwardBtn)
        spacerItem = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.horizontalLayout.addItem(spacerItem)

#ADDRESS BAR CODE
        self.addressBar = QtWidgets.QLineEdit(self.topBar)
        self.addressBar.setStyleSheet("")
        self.addressBar.setObjectName("addressBar")
        self.horizontalLayout.addWidget(self.addressBar)

#HORIZONTAL SPACER AFTER ADDRESSBAR
        spacerItem1 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.horizontalLayout.addItem(spacerItem1)
#ZOOM LEVEL CODE
        self.lessZoomBtn = QtWidgets.QPushButton(self.topBar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lessZoomBtn.sizePolicy().hasHeightForWidth())
        self.lessZoomBtn.setSizePolicy(sizePolicy)
        self.lessZoomBtn.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        self.lessZoomBtn.setFont(font)
        self.lessZoomBtn.setText("-")
        self.lessZoomBtn.setFlat(True)
        self.lessZoomBtn.setObjectName("lessZoomBtn")
        self.horizontalLayout.addWidget(self.lessZoomBtn)

        self.zoomLevel = QtWidgets.QLabel(self.topBar)
        self.zoomLevel.setObjectName("zoomLevel")
        self.zoomLevel.setText("100%")
        self.horizontalLayout.addWidget(self.zoomLevel)

        self.moreZoomBtn = QtWidgets.QPushButton(self.topBar)
        self.moreZoomBtn.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        self.moreZoomBtn.setText("+")
        self.moreZoomBtn.setFont(font)
        self.moreZoomBtn.setFlat(True)
        self.moreZoomBtn.setObjectName("moreZoomBtn")
        self.horizontalLayout.addWidget(self.moreZoomBtn)
#HORIZONTAL SPACER AFTER ZOOM LEVEL
        spacerItem2 = QtWidgets.QSpacerItem(25, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.horizontalLayout.addItem(spacerItem2)

#SETTINGS BUTTON CODE
        self.settingsBtn = QtWidgets.QPushButton(self.topBar)
        self.settingsBtn.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/settingIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.settingsBtn.setIcon(icon4)
        self.settingsBtn.setIconSize(QtCore.QSize(25, 25))
        self.settingsBtn.setFlat(True)
        self.settingsBtn.setObjectName("settingsBtn")
        self.horizontalLayout.addWidget(self.settingsBtn)
        self.verticalLayout.addWidget(self.topBar)

#WEBVIEWER WIDGET:
        self.widget = QWebEngineView(self.centralwidget)
        self.widget.setStyleSheet("QWidget {\n"
" border-radius: 8px;\n"
"    background-color: rgb(16, 32, 45);\n"
"\n"
"}")
        
        self.widget.load(QUrl("https://www.google.com"))
        self.addressBar.setText("https://www.google.com")
        self.widget.setObjectName("widget")
        self.verticalLayout.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)

        

#WEB BROWSING FUNCTIONS:
        def searchEvent():
            link = self.addressBar.text()
            if link.startswith("http") == True:
                self.widget.load(QUrl(link))
                updateSearchBar(link)
            else:
                link1 = f"https://google.com/search?q={urllib.parse.quote(link)}"
                self.widget.load(QUrl(link1))
                updateSearchBar(link1)
        self.addressBar.returnPressed.connect(searchEvent)
        
        
        def updateSearchBar(link:str):
            self.addressBar.setText(link)

        def loadingStarted():
            self.iconLoading = QtGui.QIcon()
            self.iconLoading.addPixmap(QtGui.QPixmap("icons/loadingIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.reloadBtn.setIcon(self.iconLoading)
        self.widget.loadStarted.connect(loadingStarted)

        def loadingEnd():
            self.reloadBtn.setIcon(self.icon1)
        self.widget.loadFinished.connect(loadingEnd)

        def reloadPage():
            self.widget.reload()
        self.reloadBtn.clicked.connect(reloadPage)

        def forwardPage():
            self.widget.forward()
            website = self.widget.url().toString()
            updateSearchBar(website)
        self.forwardBtn.clicked.connect(forwardPage)

        def backPage():
            self.widget.back()
            website = self.widget.url().toString()
            updateSearchBar(website)
        self.backBtn.clicked.connect(backPage)
        
        def updateURL():
            newURL = self.widget.url().toString()
            updateSearchBar(newURL)
        self.widget.urlChanged.connect(updateURL)
        #Zoom functionality: (complicated af)    
        def updateZoomLevel():
            zoom = self.widget.zoomFactor()
            zoomPercent = int(zoom * 100)
            self.zoomLevel.setText(f"{zoomPercent}%")
        def zoomIn():
            currentZoom = self.widget.zoomFactor()
            newZoom = float(currentZoom * 1.1)
            self.widget.setZoomFactor(newZoom)
            updateZoomLevel()
        self.moreZoomBtn.clicked.connect(zoomIn)
        def zoomOut():
            currentZoom = self.widget.zoomFactor()
            newZoom = float(currentZoom * 0.9)
            self.widget.setZoomFactor(newZoom)
            updateZoomLevel()
        self.lessZoomBtn.clicked.connect(zoomOut)
        #disabling ctrl+scroll to avoid conflicts in updating the label (zoomChanged method dead asf):
        def handleWheelEvent(event):
            if event.modifiers() & QtCore.Qt.ControlModifier:
                print("ctrl key pressed, disabling scrolling")
            # Ctrl is pressed, don't do default scrolling
                event.accept()  # Accept the event but do nothing
            else:
                print("ctrl key not pressed")
            # Ctrl is not pressed, let the default wheel event handler process it
                super(QWebEngineView, self.widget).wheelEvent(event)
        self.widget.wheelEvent = handleWheelEvent
#WEB BROWSING FUNCTIONS END

        
#SETTINGS MENU FUNCTIONS
        def menuTrigger():
            winStatus = appConfig[0]
            with open("settings.py") as f:
                exec(f.read())
        self.settingsBtn.clicked.connect(menuTrigger)

            

#SETTINGS MENU FUNCTIONS END


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Monochrome v0.1"))
        self.addressBar.setPlaceholderText(_translate("MainWindow", "Search Google or Enter a URL"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
